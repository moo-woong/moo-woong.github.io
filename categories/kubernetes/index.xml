<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Kubernetes on Moo-woong</title>
    <link>https://moo-woong.github.io/categories/kubernetes/</link>
    <description>Recent content in Kubernetes on Moo-woong</description>
    <image>
      <url>https://moo-woong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://moo-woong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 16 Jan 2023 22:50:26 +0900</lastBuildDate><atom:link href="https://moo-woong.github.io/categories/kubernetes/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Kubernetes Study] k8s components - kube-apiserver</title>
      <link>https://moo-woong.github.io/posts/kubernetes/kubernetes-study-3/</link>
      <pubDate>Mon, 16 Jan 2023 22:50:26 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/kubernetes/kubernetes-study-3/</guid>
      <description>kube-apiserver? kube-apiserver는 Kubernetes Cluster를 구성하데 필수적인 컴포넌트로, Cluster를 구성하는 컴포넌트들과 통신을 통해 최신의 상태를 유지할 수 있도록 합니다.
운용자가 kubectl을 통해 CLI 명령을 한다면, kubectl은 사용자의 인증을 진행한 후 변수에 설정된 kube-apiserver주소로 REST Query를 수행합니다. 운용자가 kubectl get node명령어를 통해 현재 cluster에 join 한 노드들의 정보를보려고 한다고 가정하겠습니다. kubectl은 가장 먼저 kube-apiserver는 요청의 정당성을 확인 한 후, kubectl을 통해 요청한 정보 처리를 위해 관련된 정보를 etcd에 쿼리하여 정보를 받아서 운용자에게 응답합니다.</description>
    </item>
    
    <item>
      <title>[Kubernetes Study] k8s components - ETCD</title>
      <link>https://moo-woong.github.io/posts/kubernetes/kubernetes-study-2/</link>
      <pubDate>Sun, 15 Jan 2023 23:03:34 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/kubernetes/kubernetes-study-2/</guid>
      <description>etcd? etcd는 key-value 분산 저장소입니다. 오픈소스이며, Kubernetes에서 사용되어 유명해진 데이터베이스입니다. 분산 저장소라는 말에서 알 수 있듯이 ETCD는 Replication State Machine이며, 분산 컴퓨팅 환경에서 High Availability를 제공하고 높은 신뢰성을 제공합니다. Kubernetes의 다양한 정보들이 ETCD를 통해 저장되므로 고가용성이 중요합니다.
Key-value store? 전통적으로 데이터베이스는 행과 열로 이루어진 Tabular Format 구성됩니다. 관계형 데이터베이스 SQL이 대표적입니다. key-value store는 NoSQL 데이터베이스의 한 종류이며,
Key-value store 구조   위의 테이블은 Tabular Format의 예입니다. 행(Row)는 각 사람들의 정보를 나타내고 열(Column)은 각 타입의 값을 나타냅니다.</description>
    </item>
    
    <item>
      <title>[Kubernetes Study] Cluster Architecture</title>
      <link>https://moo-woong.github.io/posts/kubernetes/kubernetes-study-1/</link>
      <pubDate>Sun, 15 Jan 2023 20:26:32 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/kubernetes/kubernetes-study-1/</guid>
      <description>Kubernetes Study posts들은 Udemy의 Kubernetes 스테디셀러인 Mumshad의 Certified Kubernetes Administrator (CKA) with Practice Tests 강의를 스터디하며 강의 내용을 체득하기 위해 간략하게 정리하는 포스트입니다. 따라서 관련 내용들은 Udemy 강의 내용이며, 아직 다 학습하지는 못했지만.. 강의 내용이 아주 이해하기 쉽게 잘 설명된것 같으니 할인할 때 구매하시면 좋을것 같습니다. 저는 약 19,000에 구매했던것 같습니다.
Kubernetes 구성요소들 Kubernetes는 contaierized 된 application들의 실행, 관리하는 플랫폼입니다. Google에서 처음 개발되었으며 오픈소스 기반으로 현재는 Linux foundation 재단에서 관리합니다. AWS, Azure, GCP 등 Public Cloud 업체들은 Kubernetes 환경을 제공하고 있고 규모가 있는 업체들의 경우 On-premise로 Kubernetes를 구축하여 Service를 제공하고 있습니다.</description>
    </item>
    
    <item>
      <title>VMWare로 Kubernetes 설치하기</title>
      <link>https://moo-woong.github.io/posts/kubernetes/kubernetes/</link>
      <pubDate>Tue, 03 Jan 2023 20:46:06 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/kubernetes/kubernetes/</guid>
      <description>VM생성 및 설정 2개 이상의 CPU Core, 2G이상의 메모리를 설정하여 VM을 생성합니다. 저는 용량이 부족해서 Kubernetes의 최소 요구사항인 2CPU, 2GMem으로 진행하였습니다. 앞으로 진행하는 절차들은 모두 모든 노드에 동일하게 진행합니다.
Guest OS에 SSH 설치 $ sudo apt-get install openssh-server Docker 설치 기본적인 설치는 Docker의 Official Installation Guide를 따릅니다.
Docker repository 설정 apt 관련 repository 설정
 $ sudo apt-get update $ sudo apt-get install \ ca-certificates \ curl \ gnupg \ lsb-release Docker의 공식 GPG Key 추가</description>
    </item>
    
    <item>
      <title>Ubuntu에 Minikube 설치하기</title>
      <link>https://moo-woong.github.io/posts/kubernetes/minikube/</link>
      <pubDate>Tue, 01 Nov 2022 22:54:51 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/kubernetes/minikube/</guid>
      <description>Minikube 설치 Kubernetes 학습을 위해서 환경이 필요하게 되었습니다. 개인 학습을 위해서는 Vanilla k8s, Amazon EKS, 그리고 Minikube 등 다양한 학습환경이 있습니다. 저는 Minikube로 선택했습니다. 이유는 다음과 같습니다.
 Vanilla k8s는 환경설정에 많은 리소스도 필요하고 회사에서 proxy환경에서 설치하는데 애를 많이 먹은 기억이 있어서 환경설정에 많은 시간을 할애하기 싫었습니다. Amazon EKS는 간단하게 구축이 가능하지만 약간의 비용이 발생할 수 있다는 점, 그리고 지지고 볶고 뜯고 맛보고 즐겨야하는데 EKS에서는 잘 할 수 있을까?에 대한 의구심이 있어 Amazon EKS 사용은 나중으로 미뤘습니다.</description>
    </item>
    
  </channel>
</rss>
