<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Moo-woong</title>
    <link>https://moo-woong.github.io/</link>
    <description>Recent content on Moo-woong</description>
    <image>
      <url>https://moo-woong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://moo-woong.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 01 Dec 2022 23:38:10 +0900</lastBuildDate><atom:link href="https://moo-woong.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LeetCode 공부 - Merge Two Sorted Lists</title>
      <link>https://moo-woong.github.io/posts/algo_21_merge_two_sorted_lists/</link>
      <pubDate>Thu, 01 Dec 2022 23:38:10 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/algo_21_merge_two_sorted_lists/</guid>
      <description>LeeCode(21) - Merge Two Sorted Lists 문제 두 Linked List의 header가 주어진다. 두 리스트를 정렬하여 하나의 리스트로 반환하라.
입력 list1 = [1,2,4], list2 = [1,3,4] 출력 [1,1,2,3,4,4] 풀이  두 리스트를 순회하면서 작은값을 취하고, 취한 리스트는 다음 노드로 이동하여 두 리스트가 모두 NULL일 때 까지 순회한다. 두 리스트는 모두 정렬된 상태이므로, 함수 도입부에서 한 리스트가 NULL이라면 다른 리스트를 반환한다. 두 리스트 모두 NULL인 경우가 있어서 헷갈렸는데, list1이 NULL일 경우 NULL인 list2를 리턴해도 무방했다.</description>
    </item>
    
    <item>
      <title>LeetCode 공부 - Valid Parentheses</title>
      <link>https://moo-woong.github.io/posts/algo_20_valid_parentheses/</link>
      <pubDate>Thu, 01 Dec 2022 23:05:08 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/algo_20_valid_parentheses/</guid>
      <description>LeeCode(20) - Valid Parentheses 문제 소괄호, 중괄호, 대괄호로 이루어진 문자열이 주어진다. 이 문자열의 괄호들이 알맞은 pair라면 true를, 아니라면 false를 반환한다.
입력  s = &amp;quot;()[]{}&amp;quot; 출력 true 풀이  전형적인 stack문제로, 괄호가 닫힐때 마다 pair를 확인한다. 주어진 문자열의 문자들을 순회하면서 문자가 여는괄호면 stack에 쌓고, 닫는 괄호라면, 현재 stack에서 top()과 pair비교 후 pair라면 pop을, 아니면 false를 리턴한다.  코드 Visual studio에서 바로 실행하도록 임의의 main문을 함께 첨부합니다. isValid()만 보시면 됩니다.
#include&amp;lt;iostream&amp;gt; #include&amp;lt;string&amp;gt; #include&amp;lt;stack&amp;gt; using namespace std; bool isValid(string s) { stack&amp;lt;char&amp;gt; st; for (char c : s) { if (c == &#39;(&#39; || c == &#39;{&#39; || c == &#39;[&#39;) { st.</description>
    </item>
    
    <item>
      <title>LeetCode 공부 - Longest Common Prefix</title>
      <link>https://moo-woong.github.io/posts/algo_14_longest_common_prefix/</link>
      <pubDate>Thu, 01 Dec 2022 22:37:08 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/algo_14_longest_common_prefix/</guid>
      <description>LeeCode(14) - Longest Common Prefix 문제 문자열 배열이 주어진다. 이 문자열 배열에서 문자가 공통인 부분만큼 문자열로 반환하라.
입력 strs = [&amp;quot;flower&amp;quot;,&amp;quot;flow&amp;quot;,&amp;quot;flight&amp;quot;] 출력 &amp;quot;fl&amp;quot; 풀이  문자열들을 사전순으로 정렬하고, 첫 번째 문자열을 기준으로 비교하여 같은 문자라면 index를 순차적으로 증가시킨다. 문자가 같을 때 까지 증가하다가 다른 문자가 나오면 기존까지 저장한 문자열을 반환한다.  코드 string longestCommonPrefix(vector&amp;lt;string&amp;gt;&amp;amp; strs) { vector&amp;lt;string&amp;gt; s = strs; sort(s.begin(), s.end()); string ret = &amp;quot;&amp;quot;; string pilot = s.at(0); for (int i = 0; i &amp;lt; pilot.</description>
    </item>
    
    <item>
      <title>LeetCode 공부 - Palindrome Number</title>
      <link>https://moo-woong.github.io/posts/algo_9_palindrome_number/</link>
      <pubDate>Thu, 01 Dec 2022 00:27:00 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/algo_9_palindrome_number/</guid>
      <description>LeeCode(9) - Palindrome Number 문제 integer x가 주어질 때, x가 Palindrome(회문)을 만족하면 true를 return, 아니라면 false를 리턴
입력 x = 121 출력 true 풀이  입력 x를 string으로 변환 앞부분을 가르키는 index front와 뒷부분을 가르키는 index back을 만들어 앞부분은 증가를, 뒷부분은 감소하며 전체 string 비교 front가 back보다 커질 때 까지 비교하여 front가 back보다 커진다면 회문으로 판단, 순회를 종료하고 true반환. 비교 중 다른 값이 나온다면 곧바로 false반환  코드 class Solution { public: bool isPalindrome(int x) { string s = to_string(x); int front = 0, back = s.</description>
    </item>
    
    <item>
      <title>LeetCode 공부 - Two Sum</title>
      <link>https://moo-woong.github.io/posts/algo_1_two_some/</link>
      <pubDate>Wed, 30 Nov 2022 23:23:39 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/algo_1_two_some/</guid>
      <description>LeeCode(1) - Two Sum 문제 integer 배열과 target이 주어질 때, 배열에서 두 정수의 합이 target을 만족하는 두 index를 반환
입력 nums = [2,7,11,15], target = 9 출력 [0,1] 풀이  배열 순회 중 현재 배열의 값과 target과의 diff 값이 hash table에 있으면, diff key의 value와 현재 배열 index를 리턴. hash table에 diff값이 없으면, 현재 배열 index의 value를 key로, index를 value로 table에 저장. 배열 순회.  코드 class Solution { public: vector&amp;lt;int&amp;gt; twoSum(vector&amp;lt;int&amp;gt;&amp;amp; nums, int target) { unordered_map&amp;lt;int, int&amp;gt; umap; vector&amp;lt;int&amp;gt; ret; for (int i = 0; i &amp;lt; nums.</description>
    </item>
    
    <item>
      <title>Ubuntu에 Minikube 설치하기</title>
      <link>https://moo-woong.github.io/posts/minikube/</link>
      <pubDate>Tue, 01 Nov 2022 22:54:51 +0900</pubDate>
      
      <guid>https://moo-woong.github.io/posts/minikube/</guid>
      <description>Minikube 설치 Kubernetes 학습을 위해서 환경이 필요하게 되었습니다. 개인 학습을 위해서는 Vanilla k8s, Amazon EKS, 그리고 Minikube 등 다양한 학습환경이 있습니다. 저는 Minikube로 선택했습니다. 이유는 다음과 같습니다.
 Vanilla k8s는 환경설정에 많은 리소스도 필요하고 회사에서 proxy환경에서 설치하는데 애를 많이 먹은 기억이 있어서 환경설정에 많은 시간을 할애하기 싫었습니다. Amazon EKS는 간단하게 구축이 가능하지만 약간의 비용이 발생할 수 있다는 점, 그리고 지지고 볶고 뜯고 맛보고 즐겨야하는데 EKS에서는 잘 할 수 있을까?에 대한 의구심이 있어 Amazon EKS 사용은 나중으로 미뤘습니다.</description>
    </item>
    
    <item>
      <title>Github Blog와 Hugo로 블로그 개설하기</title>
      <link>https://moo-woong.github.io/posts/2022-10-17-github-hugo/</link>
      <pubDate>Sun, 16 Oct 2022 08:15:52 -0700</pubDate>
      
      <guid>https://moo-woong.github.io/posts/2022-10-17-github-hugo/</guid>
      <description>GitHub Blog와 Hugo로 블로그 만들기 개요 회사만 다니다보니 이 핑계, 저 핑계를 대며 개인업무 역량관리에 소홀한게 느껴졌습니다. 과거에도 공부할 때 하나하나 PPT자료를 만들며 체득했던 전공 공부, 정보들은 저한테는 좋은 경험이었습니다. 이에 대한 경험으로 블로그를 만들어 공부도 하고, 정리한 정보들을 공유하여 찾아오는 분들에게 득이되도록 하고 싶어 블로그를 만들어보게 되었습니다. 앞으로도 잘 부탁드리며 블로그 구축부터 정리해보겠습니다.
환경  Blog: Github + Hugo Host machine: Ubuntu 20.04 LTS + VMWare workstation 16 Editor: VS Code on Windows  환경 선택에 대해서는 특별한 이유는 없습니다.</description>
    </item>
    
    <item>
      <title>First_commit</title>
      <link>https://moo-woong.github.io/posts/first_commit/</link>
      <pubDate>Sun, 16 Oct 2022 07:02:07 -0700</pubDate>
      
      <guid>https://moo-woong.github.io/posts/first_commit/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
